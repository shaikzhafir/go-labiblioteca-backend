<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="1270b6e0-37e2-44e5-a2e4-726692af1061" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/repository/bookRepository.go" beforeDir="false" afterPath="$PROJECT_DIR$/repository/bookRepository.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/repository/bookRepository_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/repository/bookRepository_test.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="true" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/.env" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/.gitignore" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/Dockerfile" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/cmd/main-server/main.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/database/database.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/docker-compose.yml" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/domain/books.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/go.mod" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/handlers/bookHandler.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/repository/bookRepository.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/repository/bookRepository_test.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/service/bookService.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/service/bookService_test.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/setenv.sh" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectId" id="1yiTMaod6mTO1llUfp26KQi5bTC" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="1" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/shaikzhafir/officialprojects/go-labiblioteca-backend&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\myprojects\go-labiblioteca-backend\domain" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.TestBookRepository_UpdateBook in go-labiblioteca-backend/repository">
    <configuration name="TestBookRepository_DeleteBook in go-labiblioteca-backend/repository" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-labiblioteca-backend" />
      <working_directory value="$PROJECT_DIR$/repository" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="go-labiblioteca-backend/repository" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestBookRepository_DeleteBook\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestBookRepository_UpdateBook in go-labiblioteca-backend/repository" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-labiblioteca-backend" />
      <working_directory value="$PROJECT_DIR$/repository" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="go-labiblioteca-backend/repository" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestBookRepository_UpdateBook\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestBookService_GetBooks in go-labiblioteca-backend/service" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-labiblioteca-backend" />
      <working_directory value="$PROJECT_DIR$/service" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="go-labiblioteca-backend/service" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestBookService_GetBooks\E$" />
      <method v="2" />
    </configuration>
    <configuration name="go test go-labiblioteca-backend" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-labiblioteca-backend" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <package value="go-labiblioteca-backend" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="gobench go-labiblioteca-backend" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-labiblioteca-backend" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <package value="go-labiblioteca-backend" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gobench" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestBookRepository_UpdateBook in go-labiblioteca-backend/repository" />
        <item itemvalue="Go Test.TestBookRepository_DeleteBook in go-labiblioteca-backend/repository" />
        <item itemvalue="Go Test.gobench go-labiblioteca-backend" />
        <item itemvalue="Go Test.go test go-labiblioteca-backend" />
        <item itemvalue="Go Test.TestBookService_GetBooks in go-labiblioteca-backend/service" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>